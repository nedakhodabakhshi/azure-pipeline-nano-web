trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  resourceGroup: 'myResourceGroup'
  location: 'centralus'
  acrName: 'myrepo126'
  imageName: 'nano-website-apache'
  containerName: 'nano-container'
  dnsName: 'nano-web-instance123'
  zipUrl: 'https://www.tooplate.com/zip-templates/2108_dashboard.zip'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Azure-RM-Connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "‚úÖ Starting automated deployment..."

      echo "‚û°Ô∏è Enabling admin access on ACR..."
      az acr update -n ${{ variables.acrName }} --admin-enabled true

      echo "‚û°Ô∏è Creating ACR (if not exists)..."
      az acr show --name ${{ variables.acrName }} --resource-group ${{ variables.resourceGroup }} ||       az acr create         --resource-group ${{ variables.resourceGroup }}         --name ${{ variables.acrName }}         --sku Basic         --admin-enabled true

      echo "‚û°Ô∏è Login to ACR..."
      az acr login --name ${{ variables.acrName }}

      echo "‚û°Ô∏è Build Docker image with wget-based web content..."
      docker build --build-arg ZIP_URL=${{ variables.zipUrl }} -t ${{ variables.imageName }} .

      echo "‚û°Ô∏è Tag & push image to ACR..."
      docker tag ${{ variables.imageName }} ${{ variables.acrName }}.azurecr.io/${{ variables.imageName }}:latest
      docker push ${{ variables.acrName }}.azurecr.io/${{ variables.imageName }}:latest

      echo "‚û°Ô∏è Get ACR credentials..."
      ACR_USERNAME=$(az acr credential show -n ${{ variables.acrName }} --query username -o tsv)
      ACR_PASSWORD=$(az acr credential show -n ${{ variables.acrName }} --query passwords[0].value -o tsv)

      echo "‚û°Ô∏è Delete existing container if it exists..."
      az container delete --name ${{ variables.containerName }} --resource-group ${{ variables.resourceGroup }} --yes || true

      echo "‚û°Ô∏è Create container instance with ACR credentials..."
      az container create         --resource-group ${{ variables.resourceGroup }}         --name ${{ variables.containerName }}         --image ${{ variables.acrName }}.azurecr.io/${{ variables.imageName }}:latest         --dns-name-label ${{ variables.dnsName }}         --ports 80         --os-type Linux         --cpu 1         --memory 1.5         --registry-login-server ${{ variables.acrName }}.azurecr.io         --registry-username $ACR_USERNAME         --registry-password $ACR_PASSWORD

      echo "‚úÖ Deployment complete. Access the app at:"
      echo "üåê http://${{ variables.dnsName }}.centralus.azurecontainer.io"
  displayName: 'Full CI/CD: Build Docker Image, Push to ACR, Deploy to ACI'
